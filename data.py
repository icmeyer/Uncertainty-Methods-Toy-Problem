import numpy as np
###############################################################################
########### U-238 resonance parameters for first resonance ####################
################################################################################
a_U238 = 9.480000e-4 # (10-12 cm)
ρ0_U238 = 0.002196807122623*0.5
ρ0 = ρ0_U238
## VLAD's VALUES
μ_E0_U238 = 6.674280
μ_Γn_U238 = 1.492300e-3
μ_Γγ_U238 = 2.271100e-2
μ_Γ_U238 = np.array([μ_E0_U238, μ_Γn_U238, μ_Γγ_U238])

# CHANGE COV WHEN VLAD GIVES
cov_Γ_U238_OLD = 1e2*np.diag([ 0.065126369275825552667027773401338945901507564256784,
                        0.0000060974748049746141519539917002332147619120952060896,
                        0.00000043730461508887773583171268036686758829891074351669])**2

# ENDF VIII Corariance (as in analytic benchmark)
cov_Γ_U238 = np.array([ [ 1.16376900000000e-07 , -2.74420700000000e-10 , 1.86175000000000e-08] ,
                        [-2.74420700000000e-10 , 3.93660000000000e-10 , -6.51026700000000e-09 ] ,
                        [ 1.86175000000000e-08 , -6.51026700000000e-09 , 1.62556300000000e-07 ]])

# Large covariance (as in analytic benchmark): same correlation matrix, different eigenvalues, to bring the analytic benchmark out of the linear regime
cov_Γ_U238_LARGE = np.array([ [ 1.23738926440000 , -1.12171077584410e-05 , 0.000569933580381586] ,
                              [-1.12171077584410e-05 , 6.18599802777778e-08, -7.66171774921739e-07] ,
                              [ 0.000569933580381586, -7.66171774921739e-07, 1.43274866944444e-05]])
